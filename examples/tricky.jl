
julia> f(x) = (1/50)*log(abs(3*(1-x) + 1)) + x^2 + 1
f (generic function with 1 method)

julia> rts = roots(f, big(-∞..∞), Bisection, 1e-10)
1-element Array{IntervalRootFinding.Root{IntervalArithmetic.Interval{BigFloat}},1}:
 Root(Interval(1.333333333266804680838522058547353208555187014038057439726685064594690508996333, 1.333333333355955174118349112194071012867032010237195434589193391349409275879933), :unknown)

julia> rts = roots(f, rts, Newton, 1e-100)
2-element Array{IntervalRootFinding.Root{IntervalArithmetic.Interval{BigFloat}},1}:
 Root(Interval(1.333333333333333333333333333333333333333333333333333333333333481826787717387749, 1.333333333333333333333333333333333333333333333333333333333333503439266723959387), :unique)
 Root(Interval(1.333333333333333333333333333333333333333333333333333333333333171031101104513633, 1.333333333333333333333333333333333333333333333333333333333333177541081641782792), :unique)

julia> diam.([root.interval for root in rts])
2-element Array{BigFloat,1}:
 2.161247900657163814091496199008940874571844147104784901162923860034565437897834e-62
 6.509980537269158229054739738474759241228714938500959571947796230805813853861729e-63
